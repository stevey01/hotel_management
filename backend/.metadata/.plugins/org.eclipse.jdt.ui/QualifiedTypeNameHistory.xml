<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.example.staff.Service.StaffService"/>
    <fullyQualifiedTypeName name="com.example.staff.model.Staff"/>
    <fullyQualifiedTypeName name="org.mockito.Mockito"/>
    <fullyQualifiedTypeName name="com.example.payment.Service.PaymentService"/>
    <fullyQualifiedTypeName name="com.example.payment.repository.PaymentRepository"/>
    <fullyQualifiedTypeName name="com.example.payment.model.Payment"/>
    <fullyQualifiedTypeName name="org.hibernate.validator.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="lombok.Builder"/>
    <fullyQualifiedTypeName name="com.example.staff.dto.Staffdto"/>
    <fullyQualifiedTypeName name="com.example.reservation.DTO.ReservationDTO"/>
    <fullyQualifiedTypeName name="com.example.payment.dto.PaymentDto"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Pattern"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Email"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestControllerAdvice"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.MethodArgumentNotValidException"/>
    <fullyQualifiedTypeName name="java.util.Map"/>
    <fullyQualifiedTypeName name="java.util.HashMap"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.ExceptionHandler"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotNull"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.NotBlank"/>
    <fullyQualifiedTypeName name="javax.validation.Valid"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Min"/>
    <fullyQualifiedTypeName name="javax.validation.constraints.Max"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
    <fullyQualifiedTypeName name="com.example.gateway.util.JwtUtil"/>
    <fullyQualifiedTypeName name="com.example.guest.DTO.GuestDTO"/>
    <fullyQualifiedTypeName name="com.example.guest.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.example.guest.Service.GuestService"/>
    <fullyQualifiedTypeName name="javax.persistence.Table"/>
    <fullyQualifiedTypeName name="com.example.reservation.exception.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="com.example.reservation.room.service.RoomService"/>
    <fullyQualifiedTypeName name="com.example.reservation.repository.RoomRepository"/>
    <fullyQualifiedTypeName name="com.example.reservation.model.Room"/>
    <fullyQualifiedTypeName name="java.text.SimpleDateFormat"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.Query"/>
    <fullyQualifiedTypeName name="feign.Param"/>
    <fullyQualifiedTypeName name="org.joda.time.LocalDate"/>
    <fullyQualifiedTypeName name="java.time.LocalDate"/>
    <fullyQualifiedTypeName name="org.springframework.format.annotation.DateTimeFormat"/>
    <fullyQualifiedTypeName name="java.util.Collections"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.example.guest.ServiceImpl.GuestServiceImpl"/>
    <fullyQualifiedTypeName name="com.example.guest.controller.GuestController"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="org.mockito.MockitoAnnotations"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="com.example.guest.model.Guest"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="springfox.documentation.swagger2.annotations.EnableSwagger2"/>
    <fullyQualifiedTypeName name="springfox.documentation.spi.DocumentationType"/>
    <fullyQualifiedTypeName name="springfox.documentation.builders.RequestHandlerSelectors"/>
    <fullyQualifiedTypeName name="springfox.documentation.spring.web.plugins.Docket"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
</qualifiedTypeNameHistroy>
